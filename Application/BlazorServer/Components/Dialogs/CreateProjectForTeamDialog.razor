@using Microsoft.EntityFrameworkCore
@using TauResourceCalculator.Domain.ResourceCalculator.Builders
@using TauResourceCalculator.Domain.ResourceCalculator.Models
@using TauResourceCalculator.Domain.ResourceCalculator.Utils
@using TauResourceCalculator.Infrastructure.Data

@inject ApplicationDbContext DbContext

<MudDialog>
  <DialogContent>
    <MudForm @ref="this.formRef">
      <MudSelect @bind-Value="this.data.Team"
                 T="Team"
                 Label="@nameof(Data.Team)"
                 Required="true"
                 Variant="Variant.Filled"
                 AnchorOrigin="Origin.BottomCenter">
        @foreach (var team in this.teams)
        {
          <MudSelectItem Value="team">@team.Name</MudSelectItem>
        }
      </MudSelect>
      <MudTextField @bind-Value="this.data.Version"
                    Required="true"
                    Label="@nameof(Data.Version)"
                    Margin="Margin.Dense"
                    Variant="Variant.Filled" />
      <MudDatePicker @bind-Date="this.data.StartProject"
                     Required="true"
                     Label="@nameof(Data.StartProject)"
                     Editable="true"
                     ShowToolbar="false"
                     DateFormat="dd.MM.yyyy"
                     ShowWeekNumbers="true"
                     Margin="Margin.Dense"
                     Variant="Variant.Filled" />
      <MudNumericField @bind-Value="this.data.SprintsCount"
                       Required="true"
                       Label="@nameof(Data.SprintsCount)"
                       Margin="Margin.Dense"
                       Min="1"
                       Variant="Variant.Filled" />
      <MudNumericField @bind-Value="this.data.WeeksPerSprint"
                       Required="true"
                       Label="@nameof(Data.WeeksPerSprint)"
                       Margin="Margin.Dense"
                       Min="1"
                       Variant="Variant.Filled" />
    </MudForm>
  </DialogContent>
  <DialogActions>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="this.HandleCreateClick">Create</MudButton>
    <MudButton OnClick="this.HandleCancelClick">Cancel</MudButton>
  </DialogActions>
</MudDialog>

@code {
  private MudForm formRef = null!;
  private Data data = new Data();

  private Team[] teams = Array.Empty<Team>();

  [CascadingParameter]
  public required IMudDialogInstance MudDialog { get; set; }

  protected override async Task OnInitializedAsync()
  {
    this.teams = await this.DbContext.Teams.ToArrayAsync(this.CancellationToken);
    await base.OnInitializedAsync();
  }

  private async Task HandleCreateClick()
  {
    await this.formRef.Validate();

    if (!this.formRef.IsValid
      || this.data.Team == null
      || string.IsNullOrWhiteSpace(this.data.Version)
      || this.data.WeeksPerSprint < 1
      || this.data.SprintsCount < 1
      || this.data.StartProject == null)
    {
      return;
    }

    this.MudDialog.Close<Data>(this.data);
  }

  private void HandleCancelClick()
  {
    this.MudDialog.Cancel();
  }

  public sealed class Data
  {
    public Team? Team { get; set; }

    public string? Version { get; set; }

    public int WeeksPerSprint { get; set; } = 2;

    public int SprintsCount { get; set; } = 7;

    public DateTime? StartProject { get; set; }
  }
}
